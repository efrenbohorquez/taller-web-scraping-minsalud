"""
Script de prueba r√°pida para verificar funcionalidad b√°sica
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_basic_functionality():
    """Prueba b√°sica de funcionalidad"""
    print("üß™ EJECUTANDO PRUEBAS B√ÅSICAS")
    print("="*40)
    
    # Test 1: Verificar imports
    try:
        from scraper import MinSaludScraper
        print("‚úÖ Import del scraper exitoso")
    except ImportError as e:
        print(f"‚ùå Error importando scraper: {e}")
        return False
    
    # Test 2: Crear instancia
    try:
        scraper = MinSaludScraper()
        print("‚úÖ Instancia del scraper creada")
    except Exception as e:
        print(f"‚ùå Error creando scraper: {e}")
        return False
    
    # Test 3: Verificar conectividad b√°sica
    try:
        from config import URL_INICIAL
        response = scraper.session.get(URL_INICIAL, timeout=10)
        if response.status_code == 200:
            print("‚úÖ Conectividad web exitosa")
        else:
            print(f"‚ö†Ô∏è  Respuesta HTTP: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error de conectividad: {e}")
        return False
    
    # Test 4: Prueba de extracci√≥n de links (solo 1 p√°gina)
    try:
        links = scraper.extraer_hipervinculos(URL_INICIAL)
        print(f"‚úÖ Extracci√≥n de links exitosa: {len(links)} links encontrados")
        
        # Mostrar algunos ejemplos
        if links:
            print("üìÑ Ejemplos de links encontrados:")
            for i, link in enumerate(links[:3]):
                print(f"  {i+1}. [{link['type']}] {link['url']}")
    except Exception as e:
        print(f"‚ùå Error extrayendo links: {e}")
        return False
    
    print("\nüéâ Todas las pruebas b√°sicas pasaron exitosamente")
    return True

if __name__ == "__main__":
    success = test_basic_functionality()
    sys.exit(0 if success else 1)